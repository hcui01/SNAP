non-fluents nf_pocman_inst_pomdp__tiny {
domain = pocman_pomdp;
objects {
xpos : {x0, x1, x2};
ypos : {y0, y1, y2};
agent: {a0};
ghost : {g0};
step : {s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13, s14};
};
non-fluents {
WALL-AT(x2, y0);
WALL-AT(x2, y1);
NORTH(y0, y1);
SOUTH(y1, y0);
NORTH(y1, y2);
SOUTH(y2, y1);
EAST(x0, x1);
WEST(x1, x0);
EAST(x1, x2);
WEST(x2, x1);
NORTH-VIS(x0, y0, y1);
NORTH-VIS(x0, y0, y2);
EAST-VIS(x0, y0, x1);
SMELL-RANGE(x0, y0, x0, y0);
HEAR-RANGE(x0, y0, x0, y0);
SMELL-RANGE(x0, y0, x0, y1);
HEAR-RANGE(x0, y0, x0, y1);
SMELL-RANGE(x0, y0, x1, y0);
HEAR-RANGE(x0, y0, x1, y0);
SMELL-RANGE(x0, y0, x1, y1);
HEAR-RANGE(x0, y0, x1, y1);
HEAR-RANGE(x0, y0, x0, y2);
HEAR-RANGE(x0, y0, x2, y0);
DETECT-WEST-DEF(x0, y0, x0, y0);
DETECT-NORTH(x0, y0, x0, y1);
DETECT-WEST-DEF(x0, y0, x0, y1);
DETECT-NORTH(x0, y0, x0, y2);
DETECT-WEST-DEF(x0, y0, x0, y2);
DETECT-EAST(x0, y0, x1, y0);
DETECT-SOUTH-DEF(x0, y0, x1, y0);
DETECT-EAST(x0, y0, x1, y1);
DETECT-NORTH(x0, y0, x1, y2);
DETECT-EAST(x0, y0, x2, y0);
DETECT-SOUTH-DEF(x0, y0, x2, y0);
DETECT-EAST(x0, y0, x2, y1);
DETECT-EAST(x0, y0, x2, y2);
NORTH-VIS(x0, y1, y2);
SOUTH-VIS(x0, y1, y0);
EAST-VIS(x0, y1, x1);
SMELL-RANGE(x0, y1, x0, y0);
HEAR-RANGE(x0, y1, x0, y0);
SMELL-RANGE(x0, y1, x0, y1);
HEAR-RANGE(x0, y1, x0, y1);
SMELL-RANGE(x0, y1, x0, y2);
HEAR-RANGE(x0, y1, x0, y2);
SMELL-RANGE(x0, y1, x1, y0);
HEAR-RANGE(x0, y1, x1, y0);
SMELL-RANGE(x0, y1, x1, y1);
HEAR-RANGE(x0, y1, x1, y1);
SMELL-RANGE(x0, y1, x1, y2);
HEAR-RANGE(x0, y1, x1, y2);
HEAR-RANGE(x0, y1, x2, y1);
DETECT-SOUTH(x0, y1, x0, y0);
DETECT-SOUTH-DEF(x0, y1, x0, y0);
DETECT-WEST-DEF(x0, y1, x0, y1);
DETECT-NORTH(x0, y1, x0, y2);
DETECT-NORTH-DEF(x0, y1, x0, y2);
DETECT-EAST(x0, y1, x1, y0);
DETECT-SOUTH-DEF(x0, y1, x1, y0);
DETECT-EAST(x0, y1, x1, y1);
DETECT-NORTH-DEF(x0, y1, x1, y1);
DETECT-EAST(x0, y1, x1, y2);
DETECT-NORTH-DEF(x0, y1, x1, y2);
DETECT-EAST(x0, y1, x2, y0);
DETECT-SOUTH-DEF(x0, y1, x2, y0);
DETECT-EAST(x0, y1, x2, y1);
DETECT-NORTH-DEF(x0, y1, x2, y1);
DETECT-EAST(x0, y1, x2, y2);
DETECT-NORTH-DEF(x0, y1, x2, y2);
SOUTH-VIS(x0, y2, y1);
SOUTH-VIS(x0, y2, y0);
EAST-VIS(x0, y2, x1);
EAST-VIS(x0, y2, x2);
SMELL-RANGE(x0, y2, x0, y1);
HEAR-RANGE(x0, y2, x0, y1);
SMELL-RANGE(x0, y2, x0, y2);
HEAR-RANGE(x0, y2, x0, y2);
SMELL-RANGE(x0, y2, x1, y1);
HEAR-RANGE(x0, y2, x1, y1);
SMELL-RANGE(x0, y2, x1, y2);
HEAR-RANGE(x0, y2, x1, y2);
HEAR-RANGE(x0, y2, x0, y0);
HEAR-RANGE(x0, y2, x2, y2);
DETECT-SOUTH(x0, y2, x0, y0);
DETECT-WEST-DEF(x0, y2, x0, y0);
DETECT-SOUTH(x0, y2, x0, y1);
DETECT-WEST-DEF(x0, y2, x0, y1);
DETECT-WEST-DEF(x0, y2, x0, y2);
DETECT-SOUTH(x0, y2, x1, y0);
DETECT-EAST(x0, y2, x1, y1);
DETECT-EAST(x0, y2, x1, y2);
DETECT-NORTH-DEF(x0, y2, x1, y2);
DETECT-EAST(x0, y2, x2, y0);
DETECT-EAST(x0, y2, x2, y1);
DETECT-EAST(x0, y2, x2, y2);
DETECT-NORTH-DEF(x0, y2, x2, y2);
NORTH-VIS(x1, y0, y1);
NORTH-VIS(x1, y0, y2);
WEST-VIS(x1, y0, x0);
SMELL-RANGE(x1, y0, x0, y0);
HEAR-RANGE(x1, y0, x0, y0);
SMELL-RANGE(x1, y0, x0, y1);
HEAR-RANGE(x1, y0, x0, y1);
SMELL-RANGE(x1, y0, x1, y0);
HEAR-RANGE(x1, y0, x1, y0);
SMELL-RANGE(x1, y0, x1, y1);
HEAR-RANGE(x1, y0, x1, y1);
SMELL-RANGE(x1, y0, x2, y0);
HEAR-RANGE(x1, y0, x2, y0);
SMELL-RANGE(x1, y0, x2, y1);
HEAR-RANGE(x1, y0, x2, y1);
HEAR-RANGE(x1, y0, x1, y2);
DETECT-WEST(x1, y0, x0, y0);
DETECT-SOUTH-DEF(x1, y0, x0, y0);
DETECT-WEST(x1, y0, x0, y1);
DETECT-NORTH(x1, y0, x0, y2);
DETECT-EAST-DEF(x1, y0, x1, y0);
DETECT-NORTH(x1, y0, x1, y1);
DETECT-EAST-DEF(x1, y0, x1, y1);
DETECT-NORTH(x1, y0, x1, y2);
DETECT-EAST-DEF(x1, y0, x1, y2);
DETECT-EAST-DEF(x1, y0, x2, y0);
DETECT-NORTH(x1, y0, x2, y1);
DETECT-EAST-DEF(x1, y0, x2, y1);
DETECT-NORTH(x1, y0, x2, y2);
DETECT-EAST-DEF(x1, y0, x2, y2);
NORTH-VIS(x1, y1, y2);
SOUTH-VIS(x1, y1, y0);
WEST-VIS(x1, y1, x0);
SMELL-RANGE(x1, y1, x0, y0);
HEAR-RANGE(x1, y1, x0, y0);
SMELL-RANGE(x1, y1, x0, y1);
HEAR-RANGE(x1, y1, x0, y1);
SMELL-RANGE(x1, y1, x0, y2);
HEAR-RANGE(x1, y1, x0, y2);
SMELL-RANGE(x1, y1, x1, y0);
HEAR-RANGE(x1, y1, x1, y0);
SMELL-RANGE(x1, y1, x1, y1);
HEAR-RANGE(x1, y1, x1, y1);
SMELL-RANGE(x1, y1, x1, y2);
HEAR-RANGE(x1, y1, x1, y2);
SMELL-RANGE(x1, y1, x2, y0);
HEAR-RANGE(x1, y1, x2, y0);
SMELL-RANGE(x1, y1, x2, y1);
HEAR-RANGE(x1, y1, x2, y1);
SMELL-RANGE(x1, y1, x2, y2);
HEAR-RANGE(x1, y1, x2, y2);
DETECT-WEST(x1, y1, x0, y0);
DETECT-SOUTH-DEF(x1, y1, x0, y0);
DETECT-WEST(x1, y1, x0, y1);
DETECT-NORTH-DEF(x1, y1, x0, y1);
DETECT-WEST(x1, y1, x0, y2);
DETECT-NORTH-DEF(x1, y1, x0, y2);
DETECT-SOUTH(x1, y1, x1, y0);
DETECT-SOUTH-DEF(x1, y1, x1, y0);
DETECT-EAST-DEF(x1, y1, x1, y1);
DETECT-NORTH(x1, y1, x1, y2);
DETECT-NORTH-DEF(x1, y1, x1, y2);
DETECT-SOUTH(x1, y1, x2, y0);
DETECT-EAST-DEF(x1, y1, x2, y0);
DETECT-EAST-DEF(x1, y1, x2, y1);
DETECT-NORTH(x1, y1, x2, y2);
DETECT-EAST-DEF(x1, y1, x2, y2);
SOUTH-VIS(x1, y2, y1);
SOUTH-VIS(x1, y2, y0);
WEST-VIS(x1, y2, x0);
EAST-VIS(x1, y2, x2);
SMELL-RANGE(x1, y2, x0, y1);
HEAR-RANGE(x1, y2, x0, y1);
SMELL-RANGE(x1, y2, x0, y2);
HEAR-RANGE(x1, y2, x0, y2);
SMELL-RANGE(x1, y2, x1, y1);
HEAR-RANGE(x1, y2, x1, y1);
SMELL-RANGE(x1, y2, x1, y2);
HEAR-RANGE(x1, y2, x1, y2);
SMELL-RANGE(x1, y2, x2, y1);
HEAR-RANGE(x1, y2, x2, y1);
SMELL-RANGE(x1, y2, x2, y2);
HEAR-RANGE(x1, y2, x2, y2);
HEAR-RANGE(x1, y2, x1, y0);
DETECT-SOUTH(x1, y2, x0, y0);
DETECT-WEST-DEF(x1, y2, x0, y0);
DETECT-WEST(x1, y2, x0, y1);
DETECT-WEST-DEF(x1, y2, x0, y1);
DETECT-WEST(x1, y2, x0, y2);
DETECT-WEST-DEF(x1, y2, x0, y2);
DETECT-SOUTH(x1, y2, x1, y0);
DETECT-WEST-DEF(x1, y2, x1, y0);
DETECT-SOUTH(x1, y2, x1, y1);
DETECT-WEST-DEF(x1, y2, x1, y1);
DETECT-WEST-DEF(x1, y2, x1, y2);
DETECT-SOUTH(x1, y2, x2, y0);
DETECT-EAST-DEF(x1, y2, x2, y0);
DETECT-EAST(x1, y2, x2, y1);
DETECT-EAST-DEF(x1, y2, x2, y1);
DETECT-EAST(x1, y2, x2, y2);
DETECT-EAST-DEF(x1, y2, x2, y2);
WEST-VIS(x2, y0, x1);
WEST-VIS(x2, y0, x0);
SMELL-RANGE(x2, y0, x1, y0);
HEAR-RANGE(x2, y0, x1, y0);
SMELL-RANGE(x2, y0, x1, y1);
HEAR-RANGE(x2, y0, x1, y1);
SMELL-RANGE(x2, y0, x2, y0);
HEAR-RANGE(x2, y0, x2, y0);
SMELL-RANGE(x2, y0, x2, y1);
HEAR-RANGE(x2, y0, x2, y1);
HEAR-RANGE(x2, y0, x2, y2);
HEAR-RANGE(x2, y0, x0, y0);
DETECT-WEST(x2, y0, x0, y0);
DETECT-WEST(x2, y0, x0, y1);
DETECT-WEST(x2, y0, x0, y2);
DETECT-WEST(x2, y0, x1, y0);
DETECT-WEST(x2, y0, x1, y1);
DETECT-WEST(x2, y0, x1, y2);
DETECT-EAST-DEF(x2, y0, x2, y0);
DETECT-EAST-DEF(x2, y0, x2, y1);
DETECT-EAST-DEF(x2, y0, x2, y2);
NORTH-VIS(x2, y1, y2);
WEST-VIS(x2, y1, x1);
WEST-VIS(x2, y1, x0);
SMELL-RANGE(x2, y1, x1, y0);
HEAR-RANGE(x2, y1, x1, y0);
SMELL-RANGE(x2, y1, x1, y1);
HEAR-RANGE(x2, y1, x1, y1);
SMELL-RANGE(x2, y1, x1, y2);
HEAR-RANGE(x2, y1, x1, y2);
SMELL-RANGE(x2, y1, x2, y0);
HEAR-RANGE(x2, y1, x2, y0);
SMELL-RANGE(x2, y1, x2, y1);
HEAR-RANGE(x2, y1, x2, y1);
SMELL-RANGE(x2, y1, x2, y2);
HEAR-RANGE(x2, y1, x2, y2);
HEAR-RANGE(x2, y1, x0, y1);
DETECT-WEST(x2, y1, x0, y0);
DETECT-SOUTH-DEF(x2, y1, x0, y0);
DETECT-WEST(x2, y1, x0, y1);
DETECT-SOUTH-DEF(x2, y1, x0, y1);
DETECT-WEST(x2, y1, x0, y2);
DETECT-WEST(x2, y1, x1, y0);
DETECT-SOUTH-DEF(x2, y1, x1, y0);
DETECT-WEST(x2, y1, x1, y1);
DETECT-SOUTH-DEF(x2, y1, x1, y1);
DETECT-WEST(x2, y1, x1, y2);
DETECT-SOUTH-DEF(x2, y1, x2, y0);
DETECT-EAST-DEF(x2, y1, x2, y1);
DETECT-NORTH(x2, y1, x2, y2);
DETECT-EAST-DEF(x2, y1, x2, y2);
WEST-VIS(x2, y2, x1);
WEST-VIS(x2, y2, x0);
SMELL-RANGE(x2, y2, x1, y1);
HEAR-RANGE(x2, y2, x1, y1);
SMELL-RANGE(x2, y2, x1, y2);
HEAR-RANGE(x2, y2, x1, y2);
SMELL-RANGE(x2, y2, x2, y1);
HEAR-RANGE(x2, y2, x2, y1);
SMELL-RANGE(x2, y2, x2, y2);
HEAR-RANGE(x2, y2, x2, y2);
HEAR-RANGE(x2, y2, x2, y0);
HEAR-RANGE(x2, y2, x0, y2);
DETECT-WEST(x2, y2, x0, y0);
DETECT-WEST(x2, y2, x0, y1);
DETECT-WEST(x2, y2, x0, y2);
DETECT-WEST(x2, y2, x1, y0);
DETECT-WEST(x2, y2, x1, y1);
DETECT-WEST(x2, y2, x1, y2);
DETECT-EAST-DEF(x2, y2, x2, y0);
DETECT-EAST-DEF(x2, y2, x2, y1);
DETECT-EAST-DEF(x2, y2, x2, y2);
NEXT-STEP(s14, s13);
NEXT-STEP(s13, s12);
NEXT-STEP(s12, s11);
NEXT-STEP(s11, s10);
NEXT-STEP(s10, s9);
NEXT-STEP(s9, s8);
NEXT-STEP(s8, s7);
NEXT-STEP(s7, s6);
NEXT-STEP(s6, s5);
NEXT-STEP(s5, s4);
NEXT-STEP(s4, s3);
NEXT-STEP(s3, s2);
NEXT-STEP(s2, s1);
NEXT-STEP(s1, s0);
INITIAL-STEP(s14);
BASE-STEP(s0);
};
}
instance pocman_inst_pomdp__tiny {
domain = pocman_pomdp;
non-fluents = nf_pocman_inst_pomdp__tiny;
init-state {
pill-at(x0, y0);
food-at(x0, y2);
food-at(x1, y0);
food-at(x1, y1);
food-at(x2, y2);
power-step(s0);
agent-at(x0, y0);
ghost-at(x2, y2);
};
max-nondef-actions = 1;
horizon = 40;
discount = 1.0;
}

