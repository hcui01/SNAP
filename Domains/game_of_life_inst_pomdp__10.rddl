non-fluents nf_game_of_life_inst_pomdp__10 {
	domain = game_of_life_pomdp;
	objects {
		x_pos : {x1,x2,x3,x4,x5,x6,x7,x8,x9,x10};
		y_pos : {y1,y2,y3};
	};
	non-fluents {
		NOISE-PROB(x1,y1) = 0.017361645;
		NEIGHBOR(x1,y1,x1,y2);
		NEIGHBOR(x1,y1,x2,y1);
		NEIGHBOR(x1,y1,x2,y2);
		NOISE-PROB(x1,y2) = 0.028838402;
		NEIGHBOR(x1,y2,x1,y1);
		NEIGHBOR(x1,y2,x1,y3);
		NEIGHBOR(x1,y2,x2,y1);
		NEIGHBOR(x1,y2,x2,y2);
		NEIGHBOR(x1,y2,x2,y3);
		NOISE-PROB(x1,y3) = 0.011634686;
		NEIGHBOR(x1,y3,x1,y2);
		NEIGHBOR(x1,y3,x2,y2);
		NEIGHBOR(x1,y3,x2,y3);
		NOISE-PROB(x2,y1) = 0.02307051;
		NEIGHBOR(x2,y1,x1,y1);
		NEIGHBOR(x2,y1,x1,y2);
		NEIGHBOR(x2,y1,x2,y2);
		NEIGHBOR(x2,y1,x3,y1);
		NEIGHBOR(x2,y1,x3,y2);
		NOISE-PROB(x2,y2) = 0.02406321;
		NEIGHBOR(x2,y2,x1,y1);
		NEIGHBOR(x2,y2,x1,y2);
		NEIGHBOR(x2,y2,x1,y3);
		NEIGHBOR(x2,y2,x2,y1);
		NEIGHBOR(x2,y2,x2,y3);
		NEIGHBOR(x2,y2,x3,y1);
		NEIGHBOR(x2,y2,x3,y2);
		NEIGHBOR(x2,y2,x3,y3);
		NOISE-PROB(x2,y3) = 0.011505477;
		NEIGHBOR(x2,y3,x1,y2);
		NEIGHBOR(x2,y3,x1,y3);
		NEIGHBOR(x2,y3,x2,y2);
		NEIGHBOR(x2,y3,x3,y2);
		NEIGHBOR(x2,y3,x3,y3);
		NOISE-PROB(x3,y1) = 0.018310275;
		NEIGHBOR(x3,y1,x2,y1);
		NEIGHBOR(x3,y1,x2,y2);
		NEIGHBOR(x3,y1,x3,y2);
		NEIGHBOR(x3,y1,x4,y1);
		NEIGHBOR(x3,y1,x4,y2);
		NOISE-PROB(x3,y2) = 0.02114645;
		NEIGHBOR(x3,y2,x2,y1);
		NEIGHBOR(x3,y2,x2,y2);
		NEIGHBOR(x3,y2,x2,y3);
		NEIGHBOR(x3,y2,x3,y1);
		NEIGHBOR(x3,y2,x3,y3);
		NEIGHBOR(x3,y2,x4,y1);
		NEIGHBOR(x3,y2,x4,y2);
		NEIGHBOR(x3,y2,x4,y3);
		NOISE-PROB(x3,y3) = 0.011014215;
		NEIGHBOR(x3,y3,x2,y2);
		NEIGHBOR(x3,y3,x2,y3);
		NEIGHBOR(x3,y3,x3,y2);
		NEIGHBOR(x3,y3,x4,y2);
		NEIGHBOR(x3,y3,x4,y3);
		NOISE-PROB(x4,y1) = 0.020976823;
		NEIGHBOR(x4,y1,x3,y1);
		NEIGHBOR(x4,y1,x3,y2);
		NEIGHBOR(x4,y1,x4,y2);
		NEIGHBOR(x4,y1,x5,y1);
		NEIGHBOR(x4,y1,x5,y2);
		NOISE-PROB(x4,y2) = 0.018165596;
		NEIGHBOR(x4,y2,x3,y1);
		NEIGHBOR(x4,y2,x3,y2);
		NEIGHBOR(x4,y2,x3,y3);
		NEIGHBOR(x4,y2,x4,y1);
		NEIGHBOR(x4,y2,x4,y3);
		NEIGHBOR(x4,y2,x5,y1);
		NEIGHBOR(x4,y2,x5,y2);
		NEIGHBOR(x4,y2,x5,y3);
		NOISE-PROB(x4,y3) = 0.018072896;
		NEIGHBOR(x4,y3,x3,y2);
		NEIGHBOR(x4,y3,x3,y3);
		NEIGHBOR(x4,y3,x4,y2);
		NEIGHBOR(x4,y3,x5,y2);
		NEIGHBOR(x4,y3,x5,y3);
		NOISE-PROB(x5,y1) = 0.025238486;
		NEIGHBOR(x5,y1,x4,y1);
		NEIGHBOR(x5,y1,x4,y2);
		NEIGHBOR(x5,y1,x5,y2);
		NEIGHBOR(x5,y1,x6,y1);
		NEIGHBOR(x5,y1,x6,y2);
		NOISE-PROB(x5,y2) = 0.024194505;
		NEIGHBOR(x5,y2,x4,y1);
		NEIGHBOR(x5,y2,x4,y2);
		NEIGHBOR(x5,y2,x4,y3);
		NEIGHBOR(x5,y2,x5,y1);
		NEIGHBOR(x5,y2,x5,y3);
		NEIGHBOR(x5,y2,x6,y1);
		NEIGHBOR(x5,y2,x6,y2);
		NEIGHBOR(x5,y2,x6,y3);
		NOISE-PROB(x5,y3) = 0.025093865;
		NEIGHBOR(x5,y3,x4,y2);
		NEIGHBOR(x5,y3,x4,y3);
		NEIGHBOR(x5,y3,x5,y2);
		NEIGHBOR(x5,y3,x6,y2);
		NEIGHBOR(x5,y3,x6,y3);
		NOISE-PROB(x6,y1) = 0.011147015;
		NEIGHBOR(x6,y1,x5,y1);
		NEIGHBOR(x6,y1,x5,y2);
		NEIGHBOR(x6,y1,x6,y2);
		NEIGHBOR(x6,y1,x7,y1);
		NEIGHBOR(x6,y1,x7,y2);
		NOISE-PROB(x6,y2) = 0.013310688;
		NEIGHBOR(x6,y2,x5,y1);
		NEIGHBOR(x6,y2,x5,y2);
		NEIGHBOR(x6,y2,x5,y3);
		NEIGHBOR(x6,y2,x6,y1);
		NEIGHBOR(x6,y2,x6,y3);
		NEIGHBOR(x6,y2,x7,y1);
		NEIGHBOR(x6,y2,x7,y2);
		NEIGHBOR(x6,y2,x7,y3);
		NOISE-PROB(x6,y3) = 0.016707847;
		NEIGHBOR(x6,y3,x5,y2);
		NEIGHBOR(x6,y3,x5,y3);
		NEIGHBOR(x6,y3,x6,y2);
		NEIGHBOR(x6,y3,x7,y2);
		NEIGHBOR(x6,y3,x7,y3);
		NOISE-PROB(x7,y1) = 0.014419361;
		NEIGHBOR(x7,y1,x6,y1);
		NEIGHBOR(x7,y1,x6,y2);
		NEIGHBOR(x7,y1,x7,y2);
		NEIGHBOR(x7,y1,x8,y1);
		NEIGHBOR(x7,y1,x8,y2);
		NOISE-PROB(x7,y2) = 0.021673957;
		NEIGHBOR(x7,y2,x6,y1);
		NEIGHBOR(x7,y2,x6,y2);
		NEIGHBOR(x7,y2,x6,y3);
		NEIGHBOR(x7,y2,x7,y1);
		NEIGHBOR(x7,y2,x7,y3);
		NEIGHBOR(x7,y2,x8,y1);
		NEIGHBOR(x7,y2,x8,y2);
		NEIGHBOR(x7,y2,x8,y3);
		NOISE-PROB(x7,y3) = 0.0250238;
		NEIGHBOR(x7,y3,x6,y2);
		NEIGHBOR(x7,y3,x6,y3);
		NEIGHBOR(x7,y3,x7,y2);
		NEIGHBOR(x7,y3,x8,y2);
		NEIGHBOR(x7,y3,x8,y3);
		NOISE-PROB(x8,y1) = 0.029609835;
		NEIGHBOR(x8,y1,x7,y1);
		NEIGHBOR(x8,y1,x7,y2);
		NEIGHBOR(x8,y1,x8,y2);
		NEIGHBOR(x8,y1,x9,y1);
		NEIGHBOR(x8,y1,x9,y2);
		NOISE-PROB(x8,y2) = 0.012302866;
		NEIGHBOR(x8,y2,x7,y1);
		NEIGHBOR(x8,y2,x7,y2);
		NEIGHBOR(x8,y2,x7,y3);
		NEIGHBOR(x8,y2,x8,y1);
		NEIGHBOR(x8,y2,x8,y3);
		NEIGHBOR(x8,y2,x9,y1);
		NEIGHBOR(x8,y2,x9,y2);
		NEIGHBOR(x8,y2,x9,y3);
		NOISE-PROB(x8,y3) = 0.01936853;
		NEIGHBOR(x8,y3,x7,y2);
		NEIGHBOR(x8,y3,x7,y3);
		NEIGHBOR(x8,y3,x8,y2);
		NEIGHBOR(x8,y3,x9,y2);
		NEIGHBOR(x8,y3,x9,y3);
		NOISE-PROB(x9,y1) = 0.015390404;
		NEIGHBOR(x9,y1,x8,y1);
		NEIGHBOR(x9,y1,x8,y2);
		NEIGHBOR(x9,y1,x9,y2);
		NEIGHBOR(x9,y1,x10,y1);
		NEIGHBOR(x9,y1,x10,y2);
		NOISE-PROB(x9,y2) = 0.02101766;
		NEIGHBOR(x9,y2,x8,y1);
		NEIGHBOR(x9,y2,x8,y2);
		NEIGHBOR(x9,y2,x8,y3);
		NEIGHBOR(x9,y2,x9,y1);
		NEIGHBOR(x9,y2,x9,y3);
		NEIGHBOR(x9,y2,x10,y1);
		NEIGHBOR(x9,y2,x10,y2);
		NEIGHBOR(x9,y2,x10,y3);
		NOISE-PROB(x9,y3) = 0.02410898;
		NEIGHBOR(x9,y3,x8,y2);
		NEIGHBOR(x9,y3,x8,y3);
		NEIGHBOR(x9,y3,x9,y2);
		NEIGHBOR(x9,y3,x10,y2);
		NEIGHBOR(x9,y3,x10,y3);
		NOISE-PROB(x10,y1) = 0.028712006;
		NEIGHBOR(x10,y1,x9,y1);
		NEIGHBOR(x10,y1,x9,y2);
		NEIGHBOR(x10,y1,x10,y2);
		NOISE-PROB(x10,y2) = 0.014471794;
		NEIGHBOR(x10,y2,x9,y1);
		NEIGHBOR(x10,y2,x9,y2);
		NEIGHBOR(x10,y2,x9,y3);
		NEIGHBOR(x10,y2,x10,y1);
		NEIGHBOR(x10,y2,x10,y3);
		NOISE-PROB(x10,y3) = 0.02491428;
		NEIGHBOR(x10,y3,x9,y2);
		NEIGHBOR(x10,y3,x9,y3);
		NEIGHBOR(x10,y3,x10,y2);
	};
}

instance game_of_life_inst_pomdp__10 {
	domain = game_of_life_pomdp;
	non-fluents = nf_game_of_life_inst_pomdp__10;
	init-state {
		alive(x1,y1);
		alive(x1,y3);
		alive(x2,y1);
		alive(x2,y2);
		alive(x4,y2);
		alive(x4,y3);
		alive(x5,y2);
		alive(x6,y1);
		alive(x7,y2);
		alive(x8,y2);
		alive(x9,y1);
		alive(x10,y1);
		alive(x10,y2);
		alive(x10,y3);
	};

	max-nondef-actions = 1;
	horizon  = 40;
	discount = 1.0;
}
